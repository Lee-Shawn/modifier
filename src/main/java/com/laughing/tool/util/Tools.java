package com.laughing.tool.util;

import java.util.regex.Pattern;

/**
 * @author : laughing
 * @create : 2021-08-30 19:12
 * @description : 工具类
 */
public class Tools {
    // 标准 IPV4 地址正则表达式
    private static final String IPV4_REGEX =
            "^(25[0-5]|2[0-4]\\d|[0-1]?\\d?\\d)(\\.(25[0-5]|2[0-4]\\d|[0-1]?\\d?\\d)){3}$";
    // 标准 IPV6 地址正则表达式
    private static final String IPV6_REGEX = "(^((([0-9A-Fa-f]{1,4}:){7}(([0-9A-Fa-f]{1,4}){1}|:))"
            + "|(([0-9A-Fa-f]{1,4}:){6}((:[0-9A-Fa-f]{1,4}){1}|"
            + "((22[0-3]|2[0-1][0-9]|[0-1][0-9][0-9]|"
            + "([0-9]){1,2})([.](25[0-5]|2[0-4][0-9]|"
            + "[0-1][0-9][0-9]|([0-9]){1,2})){3})|:))|"
            + "(([0-9A-Fa-f]{1,4}:){5}((:[0-9A-Fa-f]{1,4}){1,2}|"
            + ":((22[0-3]|2[0-1][0-9]|[0-1][0-9][0-9]|"
            + "([0-9]){1,2})([.](25[0-5]|2[0-4][0-9]|"
            + "[0-1][0-9][0-9]|([0-9]){1,2})){3})|:))|"
            + "(([0-9A-Fa-f]{1,4}:){4}((:[0-9A-Fa-f]{1,4}){1,3}"
            + "|:((22[0-3]|2[0-1][0-9]|[0-1][0-9][0-9]|"
            + "([0-9]){1,2})([.](25[0-5]|2[0-4][0-9]|[0-1][0-9][0-9]|"
            + "([0-9]){1,2})){3})|:))|(([0-9A-Fa-f]{1,4}:){3}((:[0-9A-Fa-f]{1,4}){1,4}|"
            + ":((22[0-3]|2[0-1][0-9]|[0-1][0-9][0-9]|"
            + "([0-9]){1,2})([.](25[0-5]|2[0-4][0-9]|"
            + "[0-1][0-9][0-9]|([0-9]){1,2})){3})|:))|"
            + "(([0-9A-Fa-f]{1,4}:){2}((:[0-9A-Fa-f]{1,4}){1,5}|"
            + ":((22[0-3]|2[0-1][0-9]|[0-1][0-9][0-9]|"
            + "([0-9]){1,2})([.](25[0-5]|2[0-4][0-9]|"
            + "[0-1][0-9][0-9]|([0-9]){1,2})){3})|:))"
            + "|(([0-9A-Fa-f]{1,4}:){1}((:[0-9A-Fa-f]{1,4}){1,6}"
            + "|:((22[0-3]|2[0-1][0-9]|[0-1][0-9][0-9]|"
            + "([0-9]){1,2})([.](25[0-5]|2[0-4][0-9]|"
            + "[0-1][0-9][0-9]|([0-9]){1,2})){3})|:))|"
            + "(:((:[0-9A-Fa-f]{1,4}){1,7}|(:[fF]{4}){0,1}:((22[0-3]|2[0-1][0-9]|"
            + "[0-1][0-9][0-9]|([0-9]){1,2})"
            + "([.](25[0-5]|2[0-4][0-9]|[0-1][0-9][0-9]|([0-9]){1,2})){3})|:)))$)";
    private static final Pattern ivp4 = Pattern.compile(IPV4_REGEX);
    private static final Pattern ivp6 = Pattern.compile(IPV6_REGEX);

    /**
     * 验证 IP 地址的合法性
     * @param ip IP 地址
     */
    public static boolean verifyIP(final String ip) {
        if (ip == null) {
            return false;
        }
        boolean isValidIPV4 = ivp4.matcher(ip).matches();
        boolean isValidIPV6 = ivp6.matcher(ip).matches();
        return isValidIPV4 || isValidIPV6;
    }
}

